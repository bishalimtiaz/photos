// Mocks generated by Mockito 5.4.4 from annotations
// in photos/test/presentation/modules/album/album_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:photos/app/core/base/observable_list.dart' as _i2;
import 'package:photos/app/domain/entities/album_entity.dart' as _i4;
import 'package:photos/app/presentation/modules/album/controllers/album_controller.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeObservableList_0<T extends Object?> extends _i1.SmartFake
    implements _i2.ObservableList<T> {
  _FakeObservableList_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AlbumController].
///
/// See the documentation for Mockito's code generation for more information.
class MockAlbumController extends _i1.Mock implements _i3.AlbumController {
  @override
  _i2.ObservableList<_i4.AlbumEntity> get albums => (super.noSuchMethod(
        Invocation.getter(#albums),
        returnValue: _FakeObservableList_0<_i4.AlbumEntity>(
          this,
          Invocation.getter(#albums),
        ),
        returnValueForMissingStub: _FakeObservableList_0<_i4.AlbumEntity>(
          this,
          Invocation.getter(#albums),
        ),
      ) as _i2.ObservableList<_i4.AlbumEntity>);

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
